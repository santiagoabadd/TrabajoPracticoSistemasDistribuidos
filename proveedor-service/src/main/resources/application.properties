spring.application.name=proveedor-service

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/proveedor_bd?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.properties.hibernate.show_sql=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.web.cors.allowed-origins=*


spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=responseMessage:com.unla.proveedor_service.dtos.ResponseMessage,dispatchOrdenMessage:com.unla.proveedor_service.dtos.DispatchOrdenMessage,productChange:com.unla.proveedor_service.dtos.ProductChangeDto,productNovedadMessage:com.unla.proveedor_service.dtos.ProductNovedadMessage



spring.kafka.consumer.group-id=proveedor-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.type.mapping=orderMessage:com.unla.proveedor_service.dtos.OrdenCompraMessage,changeOrderMessage:com.unla.proveedor_service.dtos.ChangeOrderMessage